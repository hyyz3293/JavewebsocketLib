apply plugin: 'com.android.library'
//apply plugin: 'maven-publish'
apply plugin: 'maven'




android {
    compileSdkVersion 26
    //buildToolsVersion "28.0.3"

    lintOptions {
        abortOnError false
    }
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation 'com.android.support:appcompat-v7:26.1.0'
//    implementation 'org.java-websocket:Java-WebSocket:1.4.0'
//    implementation 'com.google.code.gson:gson:2.8.5'


    implementation group: 'com.android.support', name: 'appcompat-v7', version: '26.1.0'
    implementation group: 'org.java-websocket', name: 'Java-WebSocket', version: '1.4.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'


//    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
//    testCompile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
//    testCompile group: 'junit', name: 'junit', version: '4.11'
//    testCompile group: 'org.json', name: 'json', version: '20180130'
}



uploadArchives {
    repositories.mavenDeployer {
        def mavenDirPath = file('D:\\work\\code_manager\\jack\\JavawebsocketMaster\\websocketlib')
        repository(url: "file://${mavenDirPath.absolutePath}")
        pom.project {
            groupId "com.github.jack"
            artifactId "websocket"
            version "1.0.0"
        }
    }
}
//gradlew :websocketlib:uploadArchives




////文件底部添加
//task sourceJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier "sources"
//}
//publishing {
//    publications {
//        aar(MavenPublication) {
//            //记住一下规则,等会导入时注意, 举例compile 'com.dz.bleota:bleota:1.0.0'
//            groupId 'com.jack.websocket'//包名
//            artifactId 'bleota'
//            version '1.0.0'//版本
//            // Tell maven to prepare the generated "*.aar" file for publishing
//            artifact(sourceJar)
//            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
//            //同时记录该依赖库所依赖的其他远程依赖
//            pom.withXml {
//                def dependenciesNode = asNode().appendNode('dependencies')
//                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
//                configurations.compile.allDependencies.each {
//                    if(it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null)
//                    {
//                        def dependencyNode = dependenciesNode.appendNode('dependency')
//                        dependencyNode.appendNode('groupId', it.group)
//                        dependencyNode.appendNode('artifactId', it.name)
//                        dependencyNode.appendNode('version', it.version)
//                    }
//                }
//            }
//        }
//    }
//    repositories {
//        maven {
//            //仓库存放在项目根目录
//            url("file://"+project.rootDir.absolutePath+"/repository")
//        }
//    }
//}



